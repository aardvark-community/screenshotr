@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Http
@inject ScreenshotrApp App
@inject IHttpContextAccessor httpContextAccessor

<PageTitle>Screenshotr.App</PageTitle>

<div class="page">

   @* <div class="sidebar">
        <NavMenu />
    </div>*@

    <main>
        <div class="top-row px-4">
            <div class="container-fluid">
                <div class="row justify-content-between">
                    <div class="col">
                        <Stats />
                    </div>
                    <span class="col text-end" style="font-size:0.75em">
                        @App.Model.UserName
                    </span>
                    <div class="col-6 text-end" style="font-size:0.75em">
                        API @App.Model.Version, App @Global.AppVersion
                    </div>
                </div>
            </div>
            @*<a href="https://docs.microsoft.com/aspnet/" target="_blank">About</a>*@
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code
{
    private void Update() => InvokeAsync(this.StateHasChanged);
    protected override void OnInitialized()
    {
        App.OnChange += Update;

        if (httpContextAccessor.HttpContext != null)
        {
            if (!string.IsNullOrWhiteSpace(ScreenshotrApp.HttpHeaderUserId))
            {
                var x = httpContextAccessor.HttpContext.Request.Headers[ScreenshotrApp.HttpHeaderUserId];
                App.Dispatch(ScreenshotrApp.MessageType.SetUserId, x);
            }
            if (!string.IsNullOrWhiteSpace(ScreenshotrApp.HttpHeaderUserName))
            {
                var x = httpContextAccessor.HttpContext.Request.Headers[ScreenshotrApp.HttpHeaderUserName];
                App.Dispatch(ScreenshotrApp.MessageType.SetUserName, x);
            }
            if (!string.IsNullOrWhiteSpace(ScreenshotrApp.HttpHeaderUserDisplayName))
            {
                var x = httpContextAccessor.HttpContext.Request.Headers[ScreenshotrApp.HttpHeaderUserDisplayName];
                App.Dispatch(ScreenshotrApp.MessageType.SetUserDisplayName, x);
            }
        }
    }
    public void Dispose() => App.OnChange -= Update;
}